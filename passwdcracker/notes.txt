    // String uri = "https://api.restful-api.dev/objects";
 

        // HttpClient client = HttpClient.newBuilder()
        //     .version(HttpClient.Version.HTTP_2)
        //     .followRedirects(HttpClient.Redirect.NORMAL)
        //      // .proxy(ProxySelector.of(new InetSocketAddress("proxy.example.com", 80)))
        //      // .authenticator(Authenticator.getDefault())
        //     .connectTimeout(Duration.ofSeconds(20))
        //     .build();
        
        // HttpRequest request = HttpRequest.newBuilder()
        //     .uri(URI.create(uri))
        //     .timeout(Duration.ofMinutes(2))
        //     .header("Content-Type", "application/json")
        //     // .header(URLConstants.API_KEY_NAME, URLConstants.API_KEY_VALUE)
        //     // .POST(BodyPublishers.ofFile(Paths.get("file.json")))
        //     .GET()
        //     .build();

        // try {
        // // Synchronous request
        // // HttpResponse<String> response = client.send(request, BodyHandlers.ofString());
        // // System.out.println("Status Code: " + response.statusCode());
        // // System.out.println("Headers: " + response.headers().map());
        // // System.out.println("Response Body: " + response.body());

        // // Asynchronous request
        //     client.sendAsync(request, BodyHandlers.ofString())
        //         .thenApply(HttpResponse::body)
        //         .thenAccept(System.out::println)
        //         .join();  

        //  } catch (Exception e) {
        //     System.err.println("Error making HTTP request: " + e.getMessage());
        // }



        

### Factory method
classDiagram
    class StrategieAttaque {
        <<abstract>>
        +attaquer()*
    }

    class AttaqueBruteForce {
        +attaquer()
    }

    class AttaqueDictionnaire {
        +attaquer()
    }

    class FabriqueStrategieAttaque {
        <<abstract>>
        +creerStrategieAttaque() StrategieAttaque*
    }

    class FabriqueAttaqueBruteForce {
        +creerStrategieAttaque() StrategieAttaque
    }

    class FabriqueAttaqueDictionnaire {
        +creerStrategieAttaque() StrategieAttaque
    }

    StrategieAttaque <|-- AttaqueBruteForce
    StrategieAttaque <|-- AttaqueDictionnaire
    FabriqueStrategieAttaque <|-- FabriqueAttaqueBruteForce
    FabriqueStrategieAttaque <|-- FabriqueAttaqueDictionnaire
    FabriqueAttaqueBruteForce --> AttaqueBruteForce
    FabriqueAttaqueDictionnaire --> AttaqueDictionnaire





### Abstract Factory 

classDiagram
    class StrategieAttaque {
        <<abstract>>
        +attaquer()*
    }

    class Cible {
        <<abstract>>
        +authentifier(motDePasse: String)* Boolean
    }

    class AttaqueBruteForce {
        +attaquer()
    }

    class AttaqueDictionnaire {
        +attaquer()
    }

    class CibleLocale {
        +authentifier(motDePasse: String) Boolean
    }

    class CibleEnLigne {
        +authentifier(motDePasse: String) Boolean
    }

    class FabriqueCasseur {
        <<abstract>>
        +creerStrategieAttaque() StrategieAttaque*
        +creerCible() Cible*
    }

    class FabriqueBruteForceLocale {
        +creerStrategieAttaque() StrategieAttaque
        +creerCible() Cible
    }

    class FabriqueDictionnaireEnLigne {
        +creerStrategieAttaque() StrategieAttaque
        +creerCible() Cible
    }

    StrategieAttaque <|-- AttaqueBruteForce
    StrategieAttaque <|-- AttaqueDictionnaire
    Cible <|-- CibleLocale
    Cible <|-- CibleEnLigne
    FabriqueCasseur <|-- FabriqueBruteForceLocale
    FabriqueCasseur <|-- FabriqueDictionnaireEnLigne
    FabriqueBruteForceLocale --> AttaqueBruteForce
    FabriqueBruteForceLocale --> CibleLocale
    FabriqueDictionnaireEnLigne --> AttaqueDictionnaire
    FabriqueDictionnaireEnLigne --> CibleEnLigne





https://docs.oracle.com/en/java/javase/11/docs/api/java.net.http/java/net/http/package-summary.html